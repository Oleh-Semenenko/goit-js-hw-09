{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,kBACnCE,UAAWH,SAASC,cAAc,iBAClCG,YAAaJ,SAASC,cAAc,oBAGtCH,EAAKC,KAAKM,iBAAiB,SAa3B,SAAuBC,GACrB,MACEC,UAAUC,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,IACvBJ,EAAMK,cAMV,OAJAC,EAAOJ,MAAQA,EAAMK,MACrBD,EAAOH,KAAOA,EAAKI,MACnBD,EAAOF,OAASA,EAAOG,MAEhBD,KArBTd,EAAKC,KAAKM,iBAAiB,UAqC3B,SAAqBC,GACnBA,EAAMQ,iBAEN,IAAK,IAAIC,EAAI,EAAGA,GAAKH,EAAOF,OAAQK,GAAK,EAAG,CAC1C,MAAMC,EAAcC,OAAOL,EAAOJ,OAASS,OAAOL,EAAOH,MAAQM,EACjEG,EAAcH,EAAGC,GAAaG,KAAKC,GAAWC,MAAMC,OAxCxD,MAAMF,EAAY,EAACG,SAAEA,EAAQf,MAAEA,MAC7BgB,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAqBH,QAAiBf,QAG1Dc,EAAU,EAACC,SAAEA,EAAQf,MAAEA,MAC3BgB,EAAA5B,GAAS6B,OAAOE,QAAQ,sBAAoBJ,QAAef,QAGvDI,EAAS,GAcf,SAASM,EAAcK,EAAUf,GAC/B,MAAMoB,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAET,E,MAAUf,IAEpByB,EAAO,C,SAAEV,E,MAAUf,MAEpBA","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delayInput: document.querySelector('[name=\"delay\"]'),\n  stepInput: document.querySelector('[name=\"step\"]'),\n  amountInput: document.querySelector('[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener('input', onInputChange);\nrefs.form.addEventListener('submit', onBtnSubmit);\n\nconst onSuccess = ({ position, delay }) => {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n};\n\nconst onError = ({ position, delay }) => {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n};\n\nconst object = {};\n\nfunction onInputChange(event) {\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  object.delay = delay.value;\n  object.step = step.value;\n  object.amount = amount.value;\n\n  return object;\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onBtnSubmit(event) {\n  event.preventDefault();\n\n  for (let i = 1; i <= object.amount; i += 1) {\n    const commonDelay = Number(object.delay) + Number(object.step) * i;\n    createPromise(i, commonDelay).then(onSuccess).catch(onError);\n  }\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delayInput","stepInput","amountInput","addEventListener","event","elements","delay","step","amount","currentTarget","$47d4ff9957288465$var$object","value","preventDefault","i","commonDelay","Number","$47d4ff9957288465$var$createPromise","then","$47d4ff9957288465$var$onSuccess","catch","$47d4ff9957288465$var$onError","position","$parcel$interopDefault","Notify","success","failure","shouldResolve","Math","random","Promise","resolve","reject","setTimeout"],"version":3,"file":"03-promises.214b3661.js.map"}