{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,kBACnCE,UAAWH,SAASC,cAAc,iBAClCG,YAAaJ,SAASC,cAAc,oBAGtCH,EAAKC,KAAKM,iBAAiB,SAa3B,SAAuBC,GACrB,IAEuBC,EAAnBD,EAAME,cADRC,SAAYC,EAAKH,EAALG,MAAOC,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAO3B,OAJAC,EAAOH,MAAQA,EAAMI,MACrBD,EAAOF,KAAOA,EAAKG,MACnBD,EAAOD,OAASA,EAAOE,MAEhBD,KArBTf,EAAKC,KAAKM,iBAAiB,UAqC3B,SAAqBC,GACnBA,EAAMS,iBAEN,IAAK,IAAIC,EAAI,EAAGA,GAAKH,EAAOD,OAAQI,GAAK,EAAG,CAC1C,IAAMC,EAAcC,OAAOL,EAAOH,OAASQ,OAAOL,EAAOF,MAAQK,EACjEG,EAAcH,EAAGC,GAAaG,KAAKC,GAAWC,MAAMC,OAxCxD,IAAMF,EAAY,SAAAG,G,IAAGC,EAAQD,EAARC,SAAUf,EAAKc,EAALd,MAC7BgB,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAAwCC,OAAfJ,EAAS,QAAYI,OAANnB,EAAM,QAGlEa,EAAU,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUf,EAAKc,EAALd,MAC3BgB,EAAA9B,GAAS+B,OAAOG,QAAQ,sBAAqCD,OAAfJ,EAAS,QAAYI,OAANnB,EAAM,QAG/DG,EAAS,GAcf,SAASM,EAAcM,EAAUf,GAC/B,IAAMqB,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEV,WAAUf,UAEpB0B,EAAO,CAAEX,WAAUf,YAEpBA,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delayInput: document.querySelector('[name=\"delay\"]'),\n  stepInput: document.querySelector('[name=\"step\"]'),\n  amountInput: document.querySelector('[name=\"amount\"]'),\n};\n\nrefs.form.addEventListener('input', onInputChange);\nrefs.form.addEventListener('submit', onBtnSubmit);\n\nconst onSuccess = ({ position, delay }) => {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n};\n\nconst onError = ({ position, delay }) => {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n};\n\nconst object = {};\n\nfunction onInputChange(event) {\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  object.delay = delay.value;\n  object.step = step.value;\n  object.amount = amount.value;\n\n  return object;\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onBtnSubmit(event) {\n  event.preventDefault();\n\n  for (let i = 1; i <= object.amount; i += 1) {\n    const commonDelay = Number(object.delay) + Number(object.step) * i;\n    createPromise(i, commonDelay).then(onSuccess).catch(onError);\n  }\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delayInput","stepInput","amountInput","addEventListener","event","_elements","currentTarget","elements","delay","step","amount","$ce04d3a99e08e73b$var$object","value","preventDefault","i","commonDelay","Number","$ce04d3a99e08e73b$var$createPromise","then","$ce04d3a99e08e73b$var$onSuccess","catch","$ce04d3a99e08e73b$var$onError","param","position","$parcel$interopDefault","Notify","success","concat","failure","shouldResolve","Math","random","Promise","resolve","reject","setTimeout"],"version":3,"file":"03-promises.12980cee.js.map"}